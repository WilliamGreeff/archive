[
    {
        "content": "<p>i got another formalization pull request out. <a href=\"https://github.com/leanprover-community/mathlib/pull/4450\">https://github.com/leanprover-community/mathlib/pull/4450</a><br>\nit's interesting, i feel like i spend more effort on formalizing the parts that are \"trivial\" to a human mathematician, rather than the parts that are \"difficult\" to a human mathematician.</p>",
        "id": 212352661,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1601929839
    },
    {
        "content": "<p>Did <a href=\"#narrow/stream/113489-new-members/topic/simplifying.20nat.2Edigits/near/212152395\"><code>norm_digits</code></a> get PR'd? If not it probably should be --- someone other that Mario can make the PR.</p>",
        "id": 212362405,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1601935524
    },
    {
        "content": "<p>i dont feel great about PRing in a big blob of code i dont understand. but i would love for someone else to</p>",
        "id": 212362703,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1601935766
    },
    {
        "content": "<p>actually, <span class=\"user-mention\" data-user-id=\"266440\">@Shing Tak Lam</span> commented on the other pull request with a one-liner with <code>rw</code> that does the same thing as <code>digit_recursion</code></p>",
        "id": 212362854,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1601935869
    },
    {
        "content": "<p>so... maybe there already <em>is</em> a way to do it in the existing library, it is just a complicated one</p>",
        "id": 212362867,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1601935886
    },
    {
        "content": "<blockquote>\n<p>it's interesting, i feel like i spend more effort on formalizing the parts that are \"trivial\" to a human mathematician, rather than the parts that are \"difficult\" to a human mathematician.</p>\n</blockquote>\n<p>Do you have a feeling more tactics would help? (e.g. things like <code>interval_cases</code>)</p>",
        "id": 212363325,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1601936208
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"238605\">Kevin Lacker</span> <a href=\"#narrow/stream/208328-IMO-grand-challenge/topic/1962.20problem.201/near/212362854\">said</a>:</p>\n<blockquote>\n<p>actually, <span class=\"user-mention silent\" data-user-id=\"266440\">Shing Tak Lam</span> commented on the other pull request with a one-liner with <code>rw</code> that does the same thing as <code>digit_recursion</code></p>\n</blockquote>\n<p>Yes, but something like <code>digit_recursion</code> should still be in the library imo. I think <code>digits_aux</code> should really be treated as an implementation detail and the users should really only need <code>digits</code>.</p>",
        "id": 212363364,
        "sender_full_name": "Shing Tak Lam",
        "timestamp": 1601936237
    },
    {
        "content": "<p>that makes sense - i ended up not being able to figure out how to use the digits aux stuff, and so i just wrote digits_helper because that was the form i wished the lemmas were in</p>",
        "id": 212363490,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1601936312
    },
    {
        "content": "<p>also because i was sick of proving 10 &gt; 2 so many times</p>",
        "id": 212363506,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1601936323
    }
]